---
- name: create lvm
  hosts: application
  become: yes
#  gather_facts: no
  vars_files:
    storage_vars.yml
  vars:
    disk_name: "{{item.devices|basename}}"
    disk_number: "{{item.devices|basename}}{{item.number}}"
  tasks:

    - name: create partition
      parted:
        number: "{{ item.number }}"
        device: "{{ item.devices }}"
        part_start: "{{ item.start }}"
        part_end: "{{ item.end }}"
        state: present
      loop: "{{ partitions }}"
      when: ansible_facts['devices'][disk_name]['partitions'][disk_number] is undefined

    - name: prepare for lvm
      package:
        name: lvm2
        state: present
        

    - name: create volume group
      lvg:
        pvs: "{{ item.devices }}"
        vg: "{{ item.name }}"
        state: present
      loop: "{{ volume_groups }}"      
#      when: item.name not in ansible_lvm['vgs']

    - name: create lv
      lvol:
        vg: "{{ item.vgroup }}"
        lv: "{{ item.name }}"
        size: "{{ item.size }}"
        state: present
      loop: "{{ logical_volumes }}"
      when: item.name not in ansible_lvm['lvs']

    - name: show lvm
      debug:
        var: ansible_lvm['lvs']

    - name: make filesystem
      filesystem:
        dev: "/dev/{{ item.vgroup }}/{{ item.name }}"
        fstype: xfs
      loop: "{{ logical_volumes }}"

    - name: ensure correct size for lvm
      lvol:
        vg: "{{ item.vgroup }}"
        lv: "{{ item.name }}"
        size: "{{ item.size }}"
        force: yes
        resizefs: yes
      loop: "{{ logical_volumes }}"

    - name: mount lvm
      mount:
        path: "{{ item.mount_path }}"
        src: "/dev/{{ item.vgroup }}/{{ item.name }}"
        fstype: xfs
        opts: defaults
        state: mounted
      loop: "{{ logical_volumes }}"
        

